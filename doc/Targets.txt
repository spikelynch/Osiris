Target 1/8/13
-------------

Stuff that needs fixing:

* Fix the input file browser.

 - it's not loading jobs.

* Bug: showing a newly-created job via forward() is broken.  <=FIXED


* Job list should have app name and live links to input and output 
  files

* tidy up style sheets <= ENOUGH

* warning when navving away from an app form 

* Metadata flag for 'share this' which opens up a web service to 
  fetch the datasets

Deferred: the nav menu expanding into categories/missions?

Survey of apps to find out which ones are unsuited for the 
web forms

Make app names in commands be links to that app's form (with default
values?)


Target 31/7/13
--------------

This morning: get CoataGlue and Damyata installed on Paul's vms, along
with Perl dependencies

This afternoon: make sure Osiris guards are working, tidy up the
interface for a demo tomorrow.

Also prepare a few notes for eresearch committee on overall ANDS
progress.

Target 30/7/13
--------------

Get the right menu working without javascript



Target 29/7/13
--------------

New layout.

"publish" button on job view, write out metadata record to harvest
directory



Targets 26/7/13
---------------

File-browser-input-file    <== DONE

Three column layout:

nav | body of page | files


--other issues to take care of--

If a job has input files from previous jobs, they are not showing up
in that file's directory.  Should we be copying the file?  Probably.


--bugs--

After starting a job, the job details page looks a bit empty.

--features--

When the output from a previous job is used, insert a link to it in
the new job.  That way a job can potentially refer back to the entire
sequence of commands which generated it   <= DONE


Targets 25/7/13
---------------

Get the file browser working again and make it embeddable <-- DONE

Add file browsing to app forms (as an alternative to upload)

Issues => Repeated clicks on the Job heading don't toggle it.



Add file browsing to the jobs list (as a shortcut for a user to 
get their files)


Targets 23/7/13
---------------

Tidy up the file-browser - include 'other' files as anonymous output files

Add the file-browser tool to the jobs list

Allow the app form to use the file-browser as an alternative to uploading

---

Sbg's email thing.

List of tasks we need to get the test records for DC18 to ANDS


Targets 22/7/13
---------------

This morning: links to all files (input and output) within a job. <-- DONE

If there's time before lunch, a server-side file browser

(AS AJAX):

Job 1
Job 2  <-- when they select this, do an Ajax request for the file
           structure and render it in the browser.
Job 3



This afternoon:

List of tasks to be done ASAP to get some test records to ANDS -
basically, a production ReDBox server and Fedora Commons server

Sbg's email login question.




Targets 19/7/13
---------------

-> get test 105 working   <= Done

-> get Osiris::Job::files() working

-> file download from job pages

-> make a start on 'use an existing file' feature



Targets 17/7/13
---------------

Still stuck on javascript guards - have to get them finished this morning.  <-- DONE

--

Make sure guards are being applied on submit.

Highest priority tomorrow: links to output files.

print.prt is being read and passed through to the job page.

Have modified Osiris::Job so that it runs each job in its own subdirectory
of the user's directory



--------


Idea for help fields - ghost the rest of the form when they appear?

Another (blue-sky) idea - store the user's command history in the
joblist file (which would then become a general config document)

---------------

Targets for 16/7/13

Fell behind because had to do a lot of datascrubbing for MS22 yesterday

Today - get the guards working in javascript

TODO - the mandatory-value checking is not working properly for 
       file input fields -- these need a focusout event, I think

TODO - It's not obvious that clicking on the field description will
expand the help: need a clue or affordance for this like a down-arrow
or something


Targets for 15/7/13
-------------------

Finish guards (at least to the stage where they are preventing submission
of invalid form parameters in javascript)

- Add a blank option to drop-down lists

Capture print.prt and output files.


Targets for 11/7/13
-------------------

This morning's sprint: javascript guards!

* Inclusions and exclusions are at the List Option level, not Parameter

* Need to handle the situation where an option EXCLUDES another parameter,
  where the other parameter is a list, and therefore needs to have a
  -not--used- option.  For example:

  isis2raw.BITTYPE.8BIT excludes ENDIAN (which is LSB/MSB)



This afternoon: capture print.prt and multiple output files.



Targets for 10/7/13
-------------------

Fix the expanded job list  <==  DONE

 * Note: need to update the fixtures for the XML job list  <== DONE

Completed job and       <== Mostly done
file browsing on Dancer

PROBLEM:

Isis utilities don't output one file per parameter - for example, 
thm2isis -TO=something.cub will generate two files:

something.odd.cub and something.even.cub.

We need some other way than the parameter => file mapping to associate
files with jobs. Either:

   * Write all the filenames back into the job_n.xml file
   * Put all the files for a job in its own job_n/ directory
   * Enforce a single FILENAME. (before the extension) for a job.

Notes:

  * Take the working directory out of FROM paths, they don't need it DONE
  * TO files need to have their extension added before running  DONE
  * link to files (but only completed TO files)
  * File selector?
  * add a 'completed' date
  * link from each output file to start off a new job?


Have a look at Guards

First page on logging in should be job list  <=== DONE

Log out link  <=== DONE



----

Default output filename = input file name with new extension

Page navigation needs fixing.


The test script 103_app.t is woefully inadequate
Tests need a bit of a cleanup in general


Targets for 9/7/13
------------------

Ptah event processing loop fixed   <= done for a single user
                                   <= Now done with multiple users!

Verify that we can post a job via the web and that a running ptah will pick
up the new job and execute it.     <= Done.

Jobs page on Dancer.           

If there's time, try to find out how to redirect the print.prt file
generated by the Isis command.




----
Leftovers from today:

* Need more information in the jobs list:

  ID, Date/time created, command run, primary input file, job status 

* What do we do with the output (Stdout/stderr) - stick it in the Job xml?

* not catching failures.

Clean up ptah so that it's

 * Not quite so chock full of comments

 * configured rather than being hard-coded to know where the root working
   directory is etc.

A stress test of ptah which sends lots of jobs via the web (and includes
some jobs that run for a long time) would be good.

--------------------------




Targets for 8/7/13

Get Ptah working so that 


Targets for 5/7

Modify the POE cookbook code so that Ptah hangs around and monitors directories

Add flocking to Osiris::User (no need as POE doesn't parallelise)


(Breakdown)
- write a code snippet which scans the working dir, loads each user
  (by dir name) and reports any new jobs.  Use this as the basis for the
  POE code  <--- Done



- Osiris::Job gets a method to return a command line string suitable
  to be run by Ptah   <-- Done

- Osiris::Job gets a read-XML method for Ptah to use  <--- done

----------------------------

Other issues - output file should default to the input filename.
IE V77782.QUB => V77782.whatever




------------------------------


Targets for 4/7/2013

- Osiris::User class    <--- done



- Start a POE daemon to manage the jobs.  <-- Done

-----
TODO/FIXME - now that descriptions are working, it's apparent that
many of them are too long to be at the top of the app form.

Each job should have its own subdirectory in the user's directory, or
different jobs are going to clobber one another's files.


---------------------


Today's targets (3/7/2013)

- fix default field values              <-- Done

- boolean parameters -> checkboxes      <-- Done

- generate an XML job with uploaded files <-- Done

- authentication    <-- 

- decide what to do with output files  <-- for now, allow user to select.

- why are app descriptions not appearing above their forms? <--Done


=================



- /jobs/ page which lists a user's jobs and status



- javascript guards on web forms

- pretty up the website - side panel nav etc

- full descriptions of list options

